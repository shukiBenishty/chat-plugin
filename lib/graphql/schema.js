"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.typeDefs = void 0;

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _apolloServerExpress = require("apollo-server-express");

function _templateObject() {
  var data = (0, _taggedTemplateLiteral2["default"])(["\n\n  interface INode {\n    id: ID!\n  }\n\n  scalar Date\n\n  type Contact {\n    id: ID!\n\n    name: String!\n    username: String!\n    online: Boolean!\n    picture: String!\n    messages(last: Int, before: ID ): MessagesConnection\n    newMessages: Int\n}\n\n  type User implements INode {\n    id: ID!\n\n    name: String!\n    username: String!\n    picture: String!\n    admin: Boolean!\n    contacts(first: Int, after: ID ): ContactsConnection\n    groups(first: Int, after: ID ): GroupsConnection\n  }\n\n\n  type Text {\n    text: String!\n  }\n\n  type Emoji {\n    emoji: String!\n  }\n\n  type File {\n    url: String!\n    fileName: String!\n  }\n\n  union MessageData = Text | Emoji | File\n  \n  union MessageDest = Contact | Group\n\n  enum Vote {\n    LIKE\n    UNLIKE\n  }\n\n  type Comments {\n    myVote: Vote\n    likes: Int!\n    unlikes: Int!\n  }\n\n  type Message implements INode {\n    id: ID!\n\n    author: Contact!\n    data: MessageData!\n    dateSended: Date!\n    comments: Comments\n    destination: MessageDest!\n    createdAt: Date!\n    readed: Boolean!\n    received: Boolean!\n  }\n\n  type Group implements INode {\n    id: ID!\n\n    name: String!\n    picture: String!\n    subscribers(first: Int, after: ID ): ContactsConnection\n    messages(last: Int, before: ID ): MessagesConnection\n    newMessages: Int\n    # createdAt: Date!\n  }\n\n  input TextInput {\n    text: String!\n  }\n\n  input EmojiInput {\n    emoji: String!\n  }\n\n  input FileInput {\n    url: String!\n    fileName: String!\n  }\n\n  type PageInfo {\n    endCursor: String\n    startCursor: String\n    hasNextPage: Boolean\n    hasPreviousPage: Boolean\n  }\n\n  type MessageEdge {\n    cursor: String!\n    node: Message\n  }\n\n  type MessagesConnection {\n      edges: [MessageEdge]!\n      pageInfo: PageInfo\n      totalCount: Int!\n  }\n\n  type ContactEdge {\n    cursor: String!\n    node: Contact\n  }\n\n  type ContactsConnection {\n      edges: [ContactEdge]!\n      pageInfo: PageInfo\n      totalCount: Int!\n  }\n\n  type GroupEdge {\n    cursor: String!\n    node: Group\n  }\n\n  type GroupsConnection {\n      edges: [GroupEdge]!\n      pageInfo: PageInfo\n      totalCount: Int!\n  }\n\n  type generalInfo {\n    online: Contact\n    typing: Contact\n    typingForMe: Contact\n    readed: Message\n    newMessage: Message\n    newContact: Contact\n    deleteGroup: Group\n    newGroup: Group\n  }\n  \n  type Query {\n    me: User\n    contact(contactId: ID!): Contact\n    group(groupId: ID!): Group\n    contacts(all: Boolean): [Contact]\n    message(messageId: ID!): Message\n    \n  }\n\n  type Mutation {\n    sendMessageText(message: TextInput!, destination: ID!): Message\n    sendMessageEmoji(message: EmojiInput!, destination: ID!): Message\n    sendMessageFile(message: FileInput!, destination: ID!): Message\n    sendComment(messageId: ID!, myVote: Vote): Message\n    addContact(contactId: ID!): Contact\n    editGroup(groupId: ID!, subscribers: [ID!], unsubscribers: [ID!]): Group\n    createGroup(name: String!, picture: String!, subscribers: [ID!]): Group\n    readMassage(messageId: ID!): Message\n    typing(destination: ID!): Boolean\n    online: Boolean\n  }\n  \n  type Subscription {\n    generalInfo(contactId: ID): generalInfo\n    personalMessageSent(contactId: ID): Message\n    publicMessageSent(group: ID!): Message\n\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

var typeDefs = (0, _apolloServerExpress.gql)(_templateObject());
exports.typeDefs = typeDefs;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ncmFwaHFsL3NjaGVtYS5qcyJdLCJuYW1lcyI6WyJ0eXBlRGVmcyIsImdxbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0FBRU8sSUFBSUEsUUFBUSxPQUFHQyx3QkFBSCxvQkFBWiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XHJcblxyXG5leHBvcnQgbGV0IHR5cGVEZWZzID0gZ3FsYFxyXG5cclxuICBpbnRlcmZhY2UgSU5vZGUge1xyXG4gICAgaWQ6IElEIVxyXG4gIH1cclxuXHJcbiAgc2NhbGFyIERhdGVcclxuXHJcbiAgdHlwZSBDb250YWN0IHtcclxuICAgIGlkOiBJRCFcclxuXHJcbiAgICBuYW1lOiBTdHJpbmchXHJcbiAgICB1c2VybmFtZTogU3RyaW5nIVxyXG4gICAgb25saW5lOiBCb29sZWFuIVxyXG4gICAgcGljdHVyZTogU3RyaW5nIVxyXG4gICAgbWVzc2FnZXMobGFzdDogSW50LCBiZWZvcmU6IElEICk6IE1lc3NhZ2VzQ29ubmVjdGlvblxyXG4gICAgbmV3TWVzc2FnZXM6IEludFxyXG59XHJcblxyXG4gIHR5cGUgVXNlciBpbXBsZW1lbnRzIElOb2RlIHtcclxuICAgIGlkOiBJRCFcclxuXHJcbiAgICBuYW1lOiBTdHJpbmchXHJcbiAgICB1c2VybmFtZTogU3RyaW5nIVxyXG4gICAgcGljdHVyZTogU3RyaW5nIVxyXG4gICAgYWRtaW46IEJvb2xlYW4hXHJcbiAgICBjb250YWN0cyhmaXJzdDogSW50LCBhZnRlcjogSUQgKTogQ29udGFjdHNDb25uZWN0aW9uXHJcbiAgICBncm91cHMoZmlyc3Q6IEludCwgYWZ0ZXI6IElEICk6IEdyb3Vwc0Nvbm5lY3Rpb25cclxuICB9XHJcblxyXG5cclxuICB0eXBlIFRleHQge1xyXG4gICAgdGV4dDogU3RyaW5nIVxyXG4gIH1cclxuXHJcbiAgdHlwZSBFbW9qaSB7XHJcbiAgICBlbW9qaTogU3RyaW5nIVxyXG4gIH1cclxuXHJcbiAgdHlwZSBGaWxlIHtcclxuICAgIHVybDogU3RyaW5nIVxyXG4gICAgZmlsZU5hbWU6IFN0cmluZyFcclxuICB9XHJcblxyXG4gIHVuaW9uIE1lc3NhZ2VEYXRhID0gVGV4dCB8IEVtb2ppIHwgRmlsZVxyXG4gIFxyXG4gIHVuaW9uIE1lc3NhZ2VEZXN0ID0gQ29udGFjdCB8IEdyb3VwXHJcblxyXG4gIGVudW0gVm90ZSB7XHJcbiAgICBMSUtFXHJcbiAgICBVTkxJS0VcclxuICB9XHJcblxyXG4gIHR5cGUgQ29tbWVudHMge1xyXG4gICAgbXlWb3RlOiBWb3RlXHJcbiAgICBsaWtlczogSW50IVxyXG4gICAgdW5saWtlczogSW50IVxyXG4gIH1cclxuXHJcbiAgdHlwZSBNZXNzYWdlIGltcGxlbWVudHMgSU5vZGUge1xyXG4gICAgaWQ6IElEIVxyXG5cclxuICAgIGF1dGhvcjogQ29udGFjdCFcclxuICAgIGRhdGE6IE1lc3NhZ2VEYXRhIVxyXG4gICAgZGF0ZVNlbmRlZDogRGF0ZSFcclxuICAgIGNvbW1lbnRzOiBDb21tZW50c1xyXG4gICAgZGVzdGluYXRpb246IE1lc3NhZ2VEZXN0IVxyXG4gICAgY3JlYXRlZEF0OiBEYXRlIVxyXG4gICAgcmVhZGVkOiBCb29sZWFuIVxyXG4gICAgcmVjZWl2ZWQ6IEJvb2xlYW4hXHJcbiAgfVxyXG5cclxuICB0eXBlIEdyb3VwIGltcGxlbWVudHMgSU5vZGUge1xyXG4gICAgaWQ6IElEIVxyXG5cclxuICAgIG5hbWU6IFN0cmluZyFcclxuICAgIHBpY3R1cmU6IFN0cmluZyFcclxuICAgIHN1YnNjcmliZXJzKGZpcnN0OiBJbnQsIGFmdGVyOiBJRCApOiBDb250YWN0c0Nvbm5lY3Rpb25cclxuICAgIG1lc3NhZ2VzKGxhc3Q6IEludCwgYmVmb3JlOiBJRCApOiBNZXNzYWdlc0Nvbm5lY3Rpb25cclxuICAgIG5ld01lc3NhZ2VzOiBJbnRcclxuICAgICMgY3JlYXRlZEF0OiBEYXRlIVxyXG4gIH1cclxuXHJcbiAgaW5wdXQgVGV4dElucHV0IHtcclxuICAgIHRleHQ6IFN0cmluZyFcclxuICB9XHJcblxyXG4gIGlucHV0IEVtb2ppSW5wdXQge1xyXG4gICAgZW1vamk6IFN0cmluZyFcclxuICB9XHJcblxyXG4gIGlucHV0IEZpbGVJbnB1dCB7XHJcbiAgICB1cmw6IFN0cmluZyFcclxuICAgIGZpbGVOYW1lOiBTdHJpbmchXHJcbiAgfVxyXG5cclxuICB0eXBlIFBhZ2VJbmZvIHtcclxuICAgIGVuZEN1cnNvcjogU3RyaW5nXHJcbiAgICBzdGFydEN1cnNvcjogU3RyaW5nXHJcbiAgICBoYXNOZXh0UGFnZTogQm9vbGVhblxyXG4gICAgaGFzUHJldmlvdXNQYWdlOiBCb29sZWFuXHJcbiAgfVxyXG5cclxuICB0eXBlIE1lc3NhZ2VFZGdlIHtcclxuICAgIGN1cnNvcjogU3RyaW5nIVxyXG4gICAgbm9kZTogTWVzc2FnZVxyXG4gIH1cclxuXHJcbiAgdHlwZSBNZXNzYWdlc0Nvbm5lY3Rpb24ge1xyXG4gICAgICBlZGdlczogW01lc3NhZ2VFZGdlXSFcclxuICAgICAgcGFnZUluZm86IFBhZ2VJbmZvXHJcbiAgICAgIHRvdGFsQ291bnQ6IEludCFcclxuICB9XHJcblxyXG4gIHR5cGUgQ29udGFjdEVkZ2Uge1xyXG4gICAgY3Vyc29yOiBTdHJpbmchXHJcbiAgICBub2RlOiBDb250YWN0XHJcbiAgfVxyXG5cclxuICB0eXBlIENvbnRhY3RzQ29ubmVjdGlvbiB7XHJcbiAgICAgIGVkZ2VzOiBbQ29udGFjdEVkZ2VdIVxyXG4gICAgICBwYWdlSW5mbzogUGFnZUluZm9cclxuICAgICAgdG90YWxDb3VudDogSW50IVxyXG4gIH1cclxuXHJcbiAgdHlwZSBHcm91cEVkZ2Uge1xyXG4gICAgY3Vyc29yOiBTdHJpbmchXHJcbiAgICBub2RlOiBHcm91cFxyXG4gIH1cclxuXHJcbiAgdHlwZSBHcm91cHNDb25uZWN0aW9uIHtcclxuICAgICAgZWRnZXM6IFtHcm91cEVkZ2VdIVxyXG4gICAgICBwYWdlSW5mbzogUGFnZUluZm9cclxuICAgICAgdG90YWxDb3VudDogSW50IVxyXG4gIH1cclxuXHJcbiAgdHlwZSBnZW5lcmFsSW5mbyB7XHJcbiAgICBvbmxpbmU6IENvbnRhY3RcclxuICAgIHR5cGluZzogQ29udGFjdFxyXG4gICAgdHlwaW5nRm9yTWU6IENvbnRhY3RcclxuICAgIHJlYWRlZDogTWVzc2FnZVxyXG4gICAgbmV3TWVzc2FnZTogTWVzc2FnZVxyXG4gICAgbmV3Q29udGFjdDogQ29udGFjdFxyXG4gICAgZGVsZXRlR3JvdXA6IEdyb3VwXHJcbiAgICBuZXdHcm91cDogR3JvdXBcclxuICB9XHJcbiAgXHJcbiAgdHlwZSBRdWVyeSB7XHJcbiAgICBtZTogVXNlclxyXG4gICAgY29udGFjdChjb250YWN0SWQ6IElEISk6IENvbnRhY3RcclxuICAgIGdyb3VwKGdyb3VwSWQ6IElEISk6IEdyb3VwXHJcbiAgICBjb250YWN0cyhhbGw6IEJvb2xlYW4pOiBbQ29udGFjdF1cclxuICAgIG1lc3NhZ2UobWVzc2FnZUlkOiBJRCEpOiBNZXNzYWdlXHJcbiAgICBcclxuICB9XHJcblxyXG4gIHR5cGUgTXV0YXRpb24ge1xyXG4gICAgc2VuZE1lc3NhZ2VUZXh0KG1lc3NhZ2U6IFRleHRJbnB1dCEsIGRlc3RpbmF0aW9uOiBJRCEpOiBNZXNzYWdlXHJcbiAgICBzZW5kTWVzc2FnZUVtb2ppKG1lc3NhZ2U6IEVtb2ppSW5wdXQhLCBkZXN0aW5hdGlvbjogSUQhKTogTWVzc2FnZVxyXG4gICAgc2VuZE1lc3NhZ2VGaWxlKG1lc3NhZ2U6IEZpbGVJbnB1dCEsIGRlc3RpbmF0aW9uOiBJRCEpOiBNZXNzYWdlXHJcbiAgICBzZW5kQ29tbWVudChtZXNzYWdlSWQ6IElEISwgbXlWb3RlOiBWb3RlKTogTWVzc2FnZVxyXG4gICAgYWRkQ29udGFjdChjb250YWN0SWQ6IElEISk6IENvbnRhY3RcclxuICAgIGVkaXRHcm91cChncm91cElkOiBJRCEsIHN1YnNjcmliZXJzOiBbSUQhXSwgdW5zdWJzY3JpYmVyczogW0lEIV0pOiBHcm91cFxyXG4gICAgY3JlYXRlR3JvdXAobmFtZTogU3RyaW5nISwgcGljdHVyZTogU3RyaW5nISwgc3Vic2NyaWJlcnM6IFtJRCFdKTogR3JvdXBcclxuICAgIHJlYWRNYXNzYWdlKG1lc3NhZ2VJZDogSUQhKTogTWVzc2FnZVxyXG4gICAgdHlwaW5nKGRlc3RpbmF0aW9uOiBJRCEpOiBCb29sZWFuXHJcbiAgICBvbmxpbmU6IEJvb2xlYW5cclxuICB9XHJcbiAgXHJcbiAgdHlwZSBTdWJzY3JpcHRpb24ge1xyXG4gICAgZ2VuZXJhbEluZm8oY29udGFjdElkOiBJRCk6IGdlbmVyYWxJbmZvXHJcbiAgICBwZXJzb25hbE1lc3NhZ2VTZW50KGNvbnRhY3RJZDogSUQpOiBNZXNzYWdlXHJcbiAgICBwdWJsaWNNZXNzYWdlU2VudChncm91cDogSUQhKTogTWVzc2FnZVxyXG5cclxuICB9XHJcbmA7XHJcbiJdfQ==